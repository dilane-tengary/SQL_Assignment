INSERT INTO ORDER (
    ORDER_REF,
    ORDER_DATE,
    SUPPLIER_NAME,
	INVOICE_ID,
    ORDER_TOTAL_AMOUNT,
    ORDER_DESCRIPTION,
    ORDER_STATUS,
    ORDER_LINE_AMOUNT
)
SELECT
    ORDER_REF,
    CASE
        WHEN REGEXP_LIKE(b.ORDER_DATE, '^[0-9]{2}-[A-Za-z]{3}-[0-9]{4}$') THEN TO_CHAR(TO_DATE(b.ORDER_DATE, 'DD-MON-YYYY'), 'DD-MON-YYYY')
        WHEN REGEXP_LIKE(b.ORDER_DATE, '^[0-9]{2}-[0-9]{2}-[0-9]{4}$') THEN TO_CHAR(TO_DATE(b.ORDER_DATE, 'DD-MM-YYYY'), 'DD-MON-YYYY')
        WHEN REGEXP_LIKE(b.ORDER_DATE, '^[0-9]{2}-[A-Za-z]{3}-[0-9]{2}$') THEN TO_CHAR(TO_DATE(b.ORDER_DATE, 'DD-MON-YY'), 'DD-MON-YYYY')
        WHEN REGEXP_LIKE(b.ORDER_DATE, '^[0-9]{2}-[0-9]{2}-[0-9]{2}$') THEN TO_CHAR(TO_DATE(b.ORDER_DATE, 'DD-MM-YY'), 'DD-MON-YYYY')
        ELSE NULL
    END AS ORDER_DATE,
    SUPPLIER_NAME,
    INVOICE_ID,
    TO_NUMBER(NVL(REPLACE(ORDER_TOTAL_AMOUNT, ',', ''), 0)) AS ORDER_TOTAL_AMOUNT,
    ORDER_DESCRIPTION,
    ORDER_STATUS,
    TO_NUMBER(TRANSLATE(NVL(REPLACE(UPPER(ORDER_LINE_AMOUNT), ',', ''), 0), 'IOS', '105')) AS ORDER_LINE_AMOUNT
FROM
    BCM_ORDER_MGT b
JOIN
-- Joining table BCM_ORDER_MGT and INVOICE
-- ISSUES here due to the null values found on table INVOICE
    INVOICE i ON
        (b.INVOICE_REFERENCE = i.INVOICE_REFERENCE) OR (i.INVOICE_REFERENCE IS NULL AND b.INVOICE_REFERENCE IS NULL))
        AND (
            (i.INVOICE_DATE IS NOT NULL AND b.INVOICE_DATE IS NOT NULL AND i.INVOICE_DATE = 
            CASE
                    WHEN REGEXP_LIKE(b.INVOICE_DATE, '^[0-9]{2}-[A-Za-z]{3}-[0-9]{4}$') THEN TO_CHAR(TO_DATE(b.INVOICE_DATE, 'DD-MON-YYYY'), 'DD-MON-YYYY')
                    WHEN REGEXP_LIKE(b.INVOICE_DATE, '^[0-9]{2}-[0-9]{2}-[0-9]{4}$') THEN TO_CHAR(TO_DATE(b.INVOICE_DATE, 'DD-MM-YYYY'), 'DD-MON-YYYY')
                    WHEN REGEXP_LIKE(b.INVOICE_DATE, '^[0-9]{2}-[A-Za-z]{3}-[0-9]{2}$') THEN TO_CHAR(TO_DATE(b.INVOICE_DATE, 'DD-MON-YY'), 'DD-MON-YYYY')
                    WHEN REGEXP_LIKE(b.INVOICE_DATE, '^[0-9]{2}-[0-9]{2}-[0-9]{2}$') THEN TO_CHAR(TO_DATE(b.INVOICE_DATE, 'DD-MM-YY'), 'DD-MON-YYYY')
                    ELSE NULL
                END)
            OR (i.INVOICE_DATE IS NULL AND b.INVOICE_DATE IS NULL)
        )
        AND (b.INVOICE_STATUS = i.INVOICE_STATUS OR (i.INVOICE_STATUS IS NULL AND b.INVOICE_STATUS IS NULL))
            AND (b.INVOICE_HOLD_REASON = i.INVOICE_HOLD_REASON OR (i.INVOICE_HOLD_REASON IS NULL AND b.INVOICE_HOLD_REASON IS NULL))
            AND (i.INVOICE_AMOUNT = TO_NUMBER(TRANSLATE(NVL(REPLACE(UPPER(b.INVOICE_AMOUNT), ',', ''), 0), 'IOS', '105')) OR (i.INVOICE_AMOUNT IS NULL AND b.INVOICE_AMOUNT IS NULL))
            AND (b.INVOICE_DESCRIPTION = i.INVOICE_DESCRIPTION OR (i.INVOICE_DESCRIPTION IS NULL AND b.INVOICE_DESCRIPTION IS NULL))
WHERE NOT EXISTS (
-- Checking if rows already exist before inserting
    SELECT 1
    FROM ORDER o
    WHERE
        o.ORDER_REF = b.ORDER_REF
        AND o.INVOICE_ID = i.INVOICE_ID
)
AND EXISTS (
-- validating if supplier_name exist in supplier table
	SELECT 1
	FROM SUPPLIER s
	WHERE s.SUPPLIER_NAME = b.SUPPLIER_NAME
)    
ORDER BY b.ORDER_REF;